@model ThAmCo.Events.Models.StaffViewModels.CreateEmployeeVM

<h1>Create</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id='form' asp-action="CreateEmployee">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control", required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div>
                @Html.Label("First Aider") @Html.CheckBoxFor(f => f.IsFirstAider, htmlAttributes: new{@class="isFirstAider"})
            </div>
            @Html.LabelFor(e => e.AssignedEvents)
            <div>
                @Html.ListBox("AssignedEvents",  Model.AssignedEvents, htmlAttributes: new{@class="form-control assignedEvents"})
                <input type="button" class="btn btn-outline-secondary" name="remove" id="remove" value="Remove Event" />
            </div>

            @Html.LabelFor(e => e.AvailableEvents)
            <div>
                @Html.ListBox("AvailableEvents", Model.AvailableEvents, htmlAttributes: new{@class="form-control availableEvents"})
                <input type="button" class="btn btn-outline-secondary" name="add" id="add" value="Assign Event" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ListStaff">Back to List</a>
</div>
@section Scripts {
    <script>
        window.Model = @Html.Raw(Json.Serialize(Model));

        $(function () {

            $(document)
                .on("click", "#add", function () {
                    $(".availableEvents :selected").remove().appendTo(".assignedEvents");
                })
                .on("click", "#remove", function () {
                    $(".assignedEvents :selected").remove().appendTo(".availableEvents");
                })
        });
        $(function () {

            function updateSelectedEvents() {
                var selectedValues = [];
                $(".assignedEvents option").each(function () {
                    selectedValues.push($(this).val());
                });
                return selectedValues;
            }

            var form = $("#form");

            form.submit(function () {

                event.preventDefault();

                var formData = {
                    Name: $("#Name").val(),
                    IsFirstAider: $('.isFirstAider').prop('checked'),
                    SelectedEvents: updateSelectedEvents()
                };

                $.ajax({
                    type: "POST",
                    url: form.attr("action"),
                    data: formData,
                    success: function (response) {
                        alert("Employee saved.")
                        location.href = '../../Staff/ListStaff'
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        alert(jqXHR.status + ' ' + errorThrown + '\n\nFailed to create Employee.');

                    },
                });
            });
        });
    </script>
    }